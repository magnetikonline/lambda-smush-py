AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  lambdaFunctionName:
    Type: "String"
    Default: "smush-py"

Resources:
  lambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        ZipFile: |
          import base64,imp,tempfile,zlib
          _='''\
          eNpFjL0KwkAQBmvzFGt1ORCxTmvrO8jpfYkHe7uybKIivrsJ+FMOzExGT5ckmWEtJohvziqOu8euWbEOx+JtUEGIf/SbLmjw0YTCPjEjU318R+vQ5Hn70WWsJ9iyu1qROT/oQFwEHT13r7Dt1Wr6afEN2rUwWg==\
          '''
          l=tempfile.mkdtemp()+'/l.py'
          h=open(l,'w')
          h.write(zlib.decompress(base64.b64decode(_)))
          h.close()
          m=imp.load_source('l',l)
          def handler(e,c):
          	return m.handler(e,c)
      Description: "Smushed Python function"
      FunctionName: !Ref "lambdaFunctionName"
      Handler: "index.handler"
      MemorySize: 128
      ReservedConcurrentExecutions: 1
      Role: !GetAtt "lambdaIAMRole.Arn"
      Runtime: "python2.7"
      Timeout: 2

  lambdaIAMRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Effect: "Allow"
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${lambdaFunctionName}:*"
          PolicyName: "lambda"
